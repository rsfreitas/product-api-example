// Code generated by protoc-gen-fasthttp . DO NOT EDIT.
package product_resourcev1

import (
	validation "github.com/go-ozzo/ozzo-validation/v4"
)

//
// ///////////////////// ProductProto //////////////////////
//

// Validate is the method responsible for validating all internal members according
// pre-defined rules.
func (p *ProductProto) Validate() error {
	return validation.Errors{
		"id@query":         validation.Validate(&p.Id),
		"name@query":       validation.Validate(&p.Name),
		"created_at@query": validation.Validate(p.CreatedAt),
		"updated_at@query": validation.Validate(p.UpdatedAt),
		"deleted_at@query": validation.Validate(p.DeletedAt),
	}.Filter()
}

func ProductProtoValidator(value interface{}) error {
	return productProtoValidator(value)
}

func productProtoValidator(value interface{}) error {
	if v, ok := value.(*ProductProto); ok {
		return v.Validate()
	}

	v := value.(ProductProto)
	return v.Validate()
}

//
// ///////////////////// CreateProductRequest //////////////////////
//

// Validate is the method responsible for validating all internal members according
// pre-defined rules.
func (c *CreateProductRequest) Validate() error {
	return validation.Errors{
		"name@body": validation.Validate(&c.Name, validation.Required),
	}.Filter()
}

func CreateProductRequestValidator(value interface{}) error {
	return createProductRequestValidator(value)
}

func createProductRequestValidator(value interface{}) error {
	if v, ok := value.(*CreateProductRequest); ok {
		return v.Validate()
	}

	v := value.(CreateProductRequest)
	return v.Validate()
}

//
// ///////////////////// GetProductByIDRequest //////////////////////
//

// Validate is the method responsible for validating all internal members according
// pre-defined rules.
func (g *GetProductByIDRequest) Validate() error {
	return validation.Errors{
		"id@path":              validation.Validate(&g.Id, validation.Required),
		"return_deleted@query": validation.Validate(&g.ReturnDeleted),
	}.Filter()
}

func GetProductByIdrequestValidator(value interface{}) error {
	return getProductByIdrequestValidator(value)
}

func getProductByIdrequestValidator(value interface{}) error {
	if v, ok := value.(*GetProductByIDRequest); ok {
		return v.Validate()
	}

	v := value.(GetProductByIDRequest)
	return v.Validate()
}

//
// ///////////////////// UpdateProductRequest //////////////////////
//

// Validate is the method responsible for validating all internal members according
// pre-defined rules.
func (u *UpdateProductRequest) Validate() error {
	return validation.Errors{
		"id@path":   validation.Validate(&u.Id, validation.Required),
		"name@body": validation.Validate(&u.Name, validation.Required),
	}.Filter()
}

func UpdateProductRequestValidator(value interface{}) error {
	return updateProductRequestValidator(value)
}

func updateProductRequestValidator(value interface{}) error {
	if v, ok := value.(*UpdateProductRequest); ok {
		return v.Validate()
	}

	v := value.(UpdateProductRequest)
	return v.Validate()
}

//
// ///////////////////// DeleteProductRequest //////////////////////
//

// Validate is the method responsible for validating all internal members according
// pre-defined rules.
func (d *DeleteProductRequest) Validate() error {
	return validation.Errors{
		"id@path": validation.Validate(&d.Id, validation.Required),
	}.Filter()
}

func DeleteProductRequestValidator(value interface{}) error {
	return deleteProductRequestValidator(value)
}

func deleteProductRequestValidator(value interface{}) error {
	if v, ok := value.(*DeleteProductRequest); ok {
		return v.Validate()
	}

	v := value.(DeleteProductRequest)
	return v.Validate()
}
